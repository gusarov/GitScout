<UserControl
	x:Class="GitScout.Views.CommitsListGraph"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:system="clr-namespace:System;assembly=System.Runtime"
	xmlns:settings="clr-namespace:GitScout.Settings"
	xmlns:datacontext="clr-namespace:GitScout.DataContext"
	xmlns:controls="clr-namespace:GitScout.Controls"
	xmlns:viewModels="clr-namespace:GitScout.ViewModels"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance datacontext:MainDataContext, IsDesignTimeCreatable=True}"
	d:DesignHeight="450"
	d:DesignWidth="800">
	<Grid>
		<ListView x:Name="_listView" ScrollViewer.ScrollChanged="listView_ScrollChanged" LayoutUpdated="listView_LayoutUpdated" ItemsSource="{Binding CurrentRepoVm.Commits}" Background="Green" VirtualizingPanel.IsVirtualizing="True">
			<ItemsControl.Resources>
				<!--
				<DataTemplate DataType="{x:Type viewModels:CommitNode}">
					<Border CornerRadius="5" Background="DarkGray" Padding="5" Margin="200 0 0 0" BorderThickness="1" BorderBrush="Black">
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{Binding LogicalPositionX}"/>
								<TextBlock Text=";" />
								<TextBlock Text="{Binding LogicalPositionY}"/>
							</StackPanel>
							<TextBlock Text="{Binding Message}" FontWeight="Bold"/>
							<TextBlock Text="{Binding Hash}"/>
							<TextBlock Text="{Binding Author}"/>
							<TextBlock Text="{Binding AuthorDate}"/>
						</StackPanel>
					</Border>
				</DataTemplate>
				-->
			</ItemsControl.Resources>
			<ListView.View>
				<GridView AllowsColumnReorder="true" x:Name="_gridView" >
					<GridViewColumn Header="Graph" Width="{Binding CanvasOverlayWidth,Mode=OneWayToSource}" >
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Ellipse RenderTransformOrigin=".5 .5" Fill="Blue" Width="15" Height="15" Margin="{Binding LineEllipseMargin}">
									<Ellipse.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
										</TransformGroup>
									</Ellipse.RenderTransform>
									<Ellipse.Triggers>
										<EventTrigger RoutedEvent="Mouse.MouseEnter" >
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimationUsingKeyFrames
														BeginTime="00:00:00"
														Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
														<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1.5" KeySpline="0,1,1,1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames
														BeginTime="00:00:00"
														Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
														<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1.5" KeySpline="0,1,1,1"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
										<EventTrigger RoutedEvent="Mouse.MouseLeave" >
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimationUsingKeyFrames
														BeginTime="00:00:00"
														Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
														<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" KeySpline="0,1,1,1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames
														BeginTime="00:00:00"
														Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
														<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" KeySpline="0,1,1,1"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</Ellipse.Triggers>
								</Ellipse>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Header="(y,x)">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="("  />
									<TextBlock Text="{Binding LogicalPositionY,Mode=OneWay}"  />
									<TextBlock Text=","  />
									<TextBlock Text="{Binding LogicalPositionX,Mode=OneWay}"  />
									<TextBlock Text=")"  />
								</StackPanel>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn DisplayMemberBinding="{Binding Message}" Header="Message" />
					<GridViewColumn DisplayMemberBinding="{Binding Hash}" Header="Hash" />
					<GridViewColumn DisplayMemberBinding="{Binding Author}" Header="Author" />
					<GridViewColumn DisplayMemberBinding="{Binding AuthorDate}" Header="AuthorDate" />

					<!--
					<GridViewColumn DisplayMemberBinding="{Binding Path=Index}" Header="Index" Width="100"/>
					<GridViewColumn>
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<local:MyTextBox Text="{Binding Mode=OneWay}"  />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn DisplayMemberBinding="{Binding Path=Hash}" Header="Hash" />
					-->
				</GridView>
			</ListView.View>
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<controls:CustomGraphVirtualizingStackPanel x:Name="_itemsPanel" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<!--
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			
			<ItemsControl.ItemTemplate>
				<DataTemplate>
				<Border CornerRadius="5" Background="Red" Padding="10">
					<StackPanel>
						<TextBlock Text="{Binding Message}" FontWeight="Bold"/>
						<TextBlock Text="{Binding Author}"/>
						<TextBlock Text="{Binding Date}"/>
					</StackPanel>
				</Border>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		-->
		</ListView>
		<Canvas x:Name="_overlayCanvas" Width="{Binding CanvasOverlayWidth}" HorizontalAlignment="Left" IsHitTestVisible="False" Background="Transparent" ClipToBounds="True" />
	</Grid>
</UserControl>
